using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[CreateAssetMenu(fileName ="New ResistVuln",menuName = "Health And Damage/ResistVuln")]
public class ResistanceVulnerability : ScriptableObject
{
    public float damageMult, healmult;//Increased or decreased damage multiplier for damage and healing
    public DamageInfo.DamageTypes damageType;
    [Tooltip("Does this pool ignore this type of damage and pass it through to the next pool down in the chain?")] public bool blockDamage;
    [Tooltip("Does this pool ignore this type of damage and pass it through to the next pool up in the chain?")] public bool blockHeal;
    [Tooltip("Flat Damage Reduction After Vulnerability")] public int armor = 0;
    [Tooltip("Flat Heal Reduction After Multiplier")] public int impedence = 0;
    public ResistanceVulnerability(float damageMult, float healmult, int armor, int impedence, DamageInfo.DamageTypes damageType, bool blockDamage, bool blockHeal)
    {
        this.damageMult = damageMult;
        this.healmult = healmult;
        this.impedence = impedence;
        this.damageType = damageType;
        this.armor = armor;
        this.blockDamage = blockDamage;
        this.blockHeal = blockHeal;
    }

    public static void AddResistancesToDictionary(List<ResistanceVulnerability> startingList, Dictionary<DamageInfo.DamageTypes,ResistanceVulnerability> resistanceDictionary)
    {
        foreach (var item in startingList)
        {
            resistanceDictionary.Add(item.damageType, item);
        }
    }
    public static void AddResistancesToDictionary(ResistVulnSet startingList, Dictionary<DamageInfo.DamageTypes, ResistanceVulnerability> resistanceDictionary)
    {
        foreach (var item in startingList.resistanceVulnerabilities)
        {
            resistanceDictionary.Add(item.damageType, item);
        }
    }
}